buildscript {
	ext {
		kotlinVersion = '1.0.4'
		anxionRelease = '1.4.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
		classpath "pl.allegro.tech.build:axion-release-plugin:${anxionRelease}"
	}
}

plugins {
	id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'pl.allegro.tech.build.axion-release'

sourceCompatibility = 1.8
targetCompatibility = 1.8

gitProperties {
	gitRepositoryRoot = project.rootProject.file('./..')
}

/** Versioning */
scmVersion {
	repository {
		directory = project.rootProject.file('./..')
	}
	localOnly = true // never connect to remote
	tag {
		prefix = ''
	}
	versionIncrementer 'incrementMinor'
}

project.version = scmVersion.version

jar {
	baseName = rootProject.name
	version = project.version
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile 'org.springframework.boot:spring-boot-devtools'
	compile 'io.springfox:springfox-swagger2:2.6.0'
	compile 'io.springfox:springfox-swagger-ui:2.6.0'
	compile 'com.google.guava:guava:19.0'
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.7.5"
	compile files('libs/ojdbc7.jar')

	testCompile 'org.springframework.boot:spring-boot-starter-test'

//	compile('org.springframework.boot:spring-boot-starter-aop')
//	compile('org.springframework.boot:spring-boot-starter-cache')
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.springframework.boot:spring-boot-starter-security')
//	compile('org.springframework.boot:spring-boot-starter-validation')
//	optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

springBoot  {
	buildInfo()
}

bootRun {
	addResources = true
}

// generate gradle wrapper with specific version
task wrapper(type: Wrapper) {
	gradleVersion = '3.1'
}